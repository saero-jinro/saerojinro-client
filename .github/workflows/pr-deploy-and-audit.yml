name: PR Deploy and Audit
on: [pull_request]

permissions:
  pull-requests: write

jobs:
  deploy_and_audit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Vercel Action
        id: vercel_action
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID}}
          vercel-project-id: ${{ secrets.PROJECT_ID}}
          scope: ${{ secrets.VERCEL_SCOPE }}

      - name: Audit URLs using Lighthouse
        id: lighthouse_audit
        uses: treosh/lighthouse-ci-action@v7
        with:
          urls: |
            ${{ steps.vercel_action.outputs.preview-url }}
          uploadArtifacts: true
          temporaryPublicStorage: true
          runs: 3

      - name: Format lighthouse result
        id: lighthouse_result
        if: ${{ always() }}
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const results = ${{ steps.lighthouse_audit.outputs.manifest }};
            if (!results || results.length === 0) {
              console.log("🚨 Lighthouse 결과가 없습니다.");
              core.setOutput("comment", "🚦 Lighthouse 테스트가 실행되었지만 결과가 없습니다. 실행 로그를 확인해주세요.");
            } else {
              const formattedResults = results.map(result => {
                return `🌍 [${result.url}](${result.url})  
                ⚡️ [Lighthouse Report](${result.report})  
                **Performance:** ${result.summary.performance * 100}  
                **Accessibility:** ${result.summary.accessibility * 100}  
                **SEO:** ${result.summary.seo * 100}  
                **Best Practices:** ${result.summary['best-practices'] * 100}`;
              }).join("\n\n---\n\n");

              console.log("✅ Lighthouse 결과: ", formattedResults);
              core.setOutput("comment", formattedResults);
            }

      - name: Add Lighthouse comment to PR
        id: lighthouse_comment_to_pr
        if: ${{ always() }}
        uses: marocchino/sticky-pull-request-comment@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          number: ${{ github.event.pull_request.number }}
          header: lighthouse
          message: ${{ steps.lighthouse_result.outputs.comment || '🚦 Lighthouse 결과가 없습니다. 실행 로그를 확인해주세요.' }}
